save "beepify@mistium" "set_directory"

def "loadTrack" "id"
  if id == "" (
    song_data.delete(id)
    save "songs.json" "set" song_data
  ) else (
  network "get" "https://originfy.milosantos.com?song=" ++ id
  response = data
  if response.type == "object" (
    response.JsonClean()
    song_data.[id] = response
    save "songs.json" "set" song_data
    if song_keys.contains(id).not (
      song_keys.append(id)
    )
    url = response.mp3_url
    sound url "load"
    if loading != [] (
      loading.delete(1)
    )
  ) else (
    if response != "loading" (
      if loading != [] (
        loading.delete(1)
      )
    )
    )
  )
endef

def "loadSong" "song"
  sound current.url "pause"
  current = {}
  current.url = song.mp3_url
  current.image = song.cover_url
  current.name = song.song_name
  current.duration = song.duration
  sound current.url "load"
  sound current.url "start" 0
  sound current.url "pause"
endef

def "seconds.origifyTime()"
  this.mins = (seconds / 60).floor
  return this.mins ++ ":" ++ (seconds - (this.mins * 60)).padStart(2,0)
endef

playing = false
song_data = {}

loading = []

loading_music = false
if "songs.json".saveExists() (
  save "songs.json" "get"
  song_data = save_data
) else (
  save "songs.json" "set" {}
  song_data = {}
)
song_keys = song_data.getKeys()
if song_keys.len > 0 "loading_music = true"

loaded_total = 0
total_songs = song_keys.len
loading = song_keys
current = {}
current.duration = 0
current.image = ""
current.url = ""
window "show"

mainloop:
if loading.len > 0 (
  c #fff
  loc 2 2 10 -20
  text "Loading your music" 10
  import "win-buttons"
  loadTrack loading.[1]
  exit
)

loc 999 2 0 -20
square window_width 40 : c#151515
loc 2 2 10 -20
text "Beepify" 10 : c#fff
loc 2 2 110 -20
icon "add" 0.6
if clicked and can (
  can = false
  track_id = "enter spotify track url or id".ask()
  
  if track_id != "" (
    if track_id.contains("https://open.spotify.com/track/") (
      track_id.regex("/track\/(.*?)(?=\?|$)/g").[1]
      track_id.right(track_id.len - 6)
    )
    loadTrack track_id
  )
)
c #333
frame window.left window.top - 40 window.left + 300 window.bottom + 60 song_keys.len * 50
loc 2 2 0 -30 + scroll_y
w = frame_width - 20
count = (scroll_y / 50).round
loop ((frame_height / 50).round + 1).clamp(0,song_keys.len) (
  count ++
  key = song_keys.[count]
  y = count * -50 + 20 + scroll_y
  loc 999 2 0 y
  song = song_data.[key]
  if current_song == key "c #333" else "c #222"
  square frame_width - 20 30 10
  if clicked and can (
    can = false
    current_song = key
    loadSong song
  )
  change_x frame_width / -2 + 25
  image song.cover_url 30 30
  text song.song_name 8 : c#fff chx#20
)
frame "clear"
loc 999 -2 0 30
square window_width 60 : c#151515
if current.contains("url") (
  loaded_song = current.url.soundinfo("loaded") and current.url != ""
) else (
  loaded_song = false
)

loc 2 -2 30 30
if loaded_song (
  image current.image 50 50
  text current.name 10 : c#fff chx#30
)
loc -6 -2 0 30
square window_width / 1.5 60 : c#222
if loaded_song (
  loc 6 -2 30 30
  icon "c #444 w 50 dot 0 0" 0.7
  c #fff
  if playing (
    icon "pause" 0.7
    sound current.url "play"
  ) else (
    icon "play" 0.7
    sound current.url "pause"
  )
  current.time = current.url.soundinfo("current_time").round
  if clicked and can (
    playing.not
    can = false
  )
  loc -6 -2 25 40
  c #111
  slider window_width / 1.5 - 80 10 "time" 10
  loc 6 -2 65 15
  if clicked (
    current.time = (slider_time * current.duration)
    sound current.url "start" current.time
    if playing.not (
      sound current.url "pause"
    )
    current.time = current.time.floor
  ) else (
    slider_time = current.time / current.duration
  )

  text current.time.origifyTime() ++ "/" ++ current.duration.round.origifyTime() 9 : c#ddd
)
if mouse_down.not "can = true"
import "win-buttons"
