save "desktop@system" "set_directory"

window.no_desktop = true

def "icons_big"
  app_size = 2.5
  theme.app_size = app_size
  save "theme.json" "set" theme
endef

def "icons_norm"
  app_size = 2
  theme.app_size = app_size
  save "theme.json" "set" theme
endef

def "icons_small"
  app_size = 1.7
  theme.app_size = app_size
  save "theme.json" "set" theme
endef

def "icons_hide"
  app_size = 0
  theme.app_size = app_size
  save "theme.json" "set" theme
endef

def "upload_file"
  terminal "upload /desktop"
endef


desktop_rightclick = [
  "Change Wallpaper",
  "-",
  {"Upload File":"upload_file"},
  "New Folder Inside",
  "New File",
  "-",
  "Info",
  "Paste",
  "Copy Path",
  "-",
  [
    "View",
    {"Big Icons":"icons_big"},
    {"Normal Icons":"icons_norm"},
    {"Small Icons":"icons_small"},
    "-",
    {"Hide Icons":"icons_hide"}
  ],
  [
    "Apps",
    "None"
  ]
]

desktop_rightclick_temp = desktop_rightclick

if "theme.json".saveExists() (
  theme = "theme.json".saveGet().JsonClean()
) else (
  theme = {"app_size":"1.8"}
  save "theme.json" "set" theme
)

app_size = theme.app_size

clicked_id = 0
window "x" 0
windowfileloc = user_folder ++ "/Desktop"
include windowfileloc
file "open" windowfileloc ++ ".folder" "onlyaccess"
file "set" 4 data.delete("")
file "get" 14
desktop_uuid = data
positions = {}
name = null
apps_temp = ""
window "responsive" true

mainloop:
include windowfileloc
nhvr = window_id_index != window_top_index
cnrn = desktop != data or bg_redrawn

if cnrn.not and nhvr "exit"
movefileloc windowfileloc
window "y" 35
window "dimensions" screensize_x screensize_y - 70
desktop = data
if nhvr.not (
  if file_dropped != 0 (
    loc 2 2 0 0
    file "open" file_dropped
    file "set" "6" (x_position - (mouse_x - 35) * -1 / 70).round * 70
    file "set" "7" (y_position - (mouse_y + 35) * -1 / 70).round * 70
    file_dropped = 0
  )
  if mouse_down and can (
    can = false
    mouse_start_x = mouse_x
    mouse_start_y = mouse_y
    window "refresh_bg"
  )
  if mouse_down (
    sqw = mouse_start_x - mouse_x
    sqh = mouse_start_y - mouse_y
    frame mouse_start_x mouse_start_y mouse_x mouse_y
    goto 0 0
    c #000
    pen "opacity" 70
    pen "size" frame_width + frame_height
    pen "down"
    pen "up"
    pen "opacity" 100
    fx = frame_x
    fy = frame_y
    fw = frame_width
    fh = frame_height
    frame "clear"
    window "dimensions" screensize_x screensize_y - 70
    window "refresh_bg"
  ) else (
    if can.not (
      window "refresh_bg"
    )
    can = true
  )
  goto 0 0
  square screensize_x screensize_y 1 0 1

  data_temp = data
  terminal "get extensions"
  if data != apps_temp (
    apps_temp = data
    each i extension data (
      data[i] = extension
    )
    len = desktop_rightclick.len
    desktop_rightclick[len] = ["Apps"].concat(data)
  )
  data = data_temp

  rightclick desktop_rightclick desktop_uuid
)
if data == [] "exit"
if app_size == 0 "exit"
each i app_id desktop (
  file "open" app_id "onlyaccess"
  loc 2 2 35 -35
  file "get" 6
  change_x data
  file "get" 7
  change_y data
  square 30 30 0 0 1
  if mouse_touching or cnrn (
    file "render" app_size "interactable"
    rightclick "file" app_id
  )
  file "get" 2
  if mouse_touching (
    square data.len * 8 10 10 : c#000 chy#-30
    change_x data.len * -4
    text data 8 : c#fff
    name = data
  ) else (
    if name == data (
      window "refresh_bg"
      name = null
    )
  )
)
