import "window_tools"

window "dimensions" 809 500
can = false
permission "request" "file admin"
permission "request" "terminal"
permission "request" "kernel"

def "inform" "data"
  gpt "inform_bot" "assistant" data
endef

gpt "new_bot" "assistant"
inform "You are the originOS assistant"
inform "The user's name is" + username
inform "Origin's current version is" + origin.version
inform "originOS is a web based operating system built on scratch"
inform "Studio is a simple text editor that can be used to edit files"
inform "studio can run icn, osl, js, python, oasm and otas, but it only able to edit other files like text"

selected_input = "search"

outputs = {}
settings_pages = [
  "System",
  "System/Info",
  "System/Display",
  "System/Media",
  "System/Notifications",
  "System/Boot Applications",
  "System/Storage",
  "System/Multitasking",
  "System/Community",
  "Network",
  "Appearance",
  "Appearance/Background",
  "Appearance/Dock",
  "Appearance/Colours",
  "Appearance/Mouse",
  "Appearance/File Types",
  "Account",
  "Time",
  "Privacy",
  "Updates",
  "Credits"
]
input_search = ""
settings_pages.join(newline)
terminal "get filepaths"
files_paths = data.join(newline)
terminal "-get.windows"
windows = windows_names.join(newline)

inform "The users files are listed from oldest at the top to youngest at the bottom as: " ++ files_paths
inform "The user has these apps open: " ++ windows
inform "Don't use any formatting other than # or ## or ###"
inform "To access a file, YOU need to type the following and without any other text and starting the message with: '<FILEREAD>path' like <FILEREAD>origin/(c) users/username/downloads/test.osl, you will get an automated response from the user of the file array"
inform "To open or run a file you must type the the following and without any other text and starting the message with: '<FILEOPEN>path' like <FILEOPEN>origin/(c) users/username/downloads/test.osl and you will get an automated response from the user of 'File Opened'"
inform "You care able to open multiple files sequentially by responding to the file data with another open file request"
w = 647.2
h = 400
left = w / -2
right = w / 2

mainloop:
load_theme

goto 0 0
square w h 30 : c#global_accent
if "escape".onpress or (clicked.not and mouse_left) (
  window "stop"
)
square w h 25 : c#window_colour
goto 0 h / 2 - 25
square w 50 10 : c#prim
input_search.destr
input w-20 30 "search" "Search For Apps And Commands..."
input_search.str.toLower()
if input_search != temp (
  page_len = 0
  temp = input_search
  tokens = input_search.split(" ")
  if true "data =" + input_search
  outputs.main = ""
  txt_size = 20
  txt_sizes = ["20"]
  if data.istype("number") (
    name = "Calculator"
    outputs.main = [].append(input_search.str + "=" + data)
    page_len += 150
    segment_length = 150
  )
  temp = input_search.replace("?","")
  if ["what time is it","what is the time","whats the hour","whats the god damn hour","whats the fucking time","time","hour"].contains(temp) (
    name = "Time"
    outputs.main = [].append(timestamp.timestamp("convert-time"))
    page_len += 150
    segment_length = 150
    temp = ""
  )
  if ["what day is it","whats the day today","day"].contains(temp) (
    name = "Time"
    outputs.main = [].append(day + day_number)
    page_len += 150
    segment_length = 150
    temp = ""
  )
  if input_search != "" and files_paths.contains(input_search) (
    re = "^/.*" ++ input_search ++ ".*$/img"
    outputs.files = files_paths.regex(re)
    page_len += outputs.files.len.clamp(1,10) * 40 + 20
  ) else (
    outputs.files = ""
  )
  if input_search != "" and windows.contains(input_search) (
    re = "^/.*" ++ input_search ++ ".*$/img"
    outputs.windows = windows.regex(re)
    page_len += outputs.windows.len.clamp(1,4) * 40 + 20
  ) else (
    outputs.windows = ""
  )
  if input_search.len > 3 and settings_pages.contains(input_search) (
    re = "^/.*" ++ input_search ++ ".*$/img"
    outputs.settings = settings_pages.regex(re)
    page_len += outputs.settings.len * 40 + 20
  ) else (
    outputs.settings = ""
  )
  output_keys = outputs.getall("keys")
)
if "enter".onpress (
  outputs.main = "GPT Is Thinking"
  goto left 120
  text "GPT Is Thinking" 10 : c#txtc
  gpt "send" "assistant" input_search.str
  if data.startsWith("<FILEOPEN>") (
    path = data.right(data.len - 10).strip()
    file "open" path "onlyaccess"
    file "start"
    file "close"
    window "stop"
    data = ""
  )
  while data.startsWith("<FILEREAD>") (
    square 200 40 10 : c#222
    change_x "Reading File".len * -5
    text "Reading File" 10 : c#txtc
    path = data.right(data.len - 10).strip()
    goto -300 120
    text path 10
    file "open" path
    gpt "send" "assistant" file
    file "close"
  )
  input_search = ""
  temp = ""
  data.wrapText(58)
  data.split(newline)
  txt_sizes = []
  txt_size = 10
  code_block = 0
  each i line data (
    if line.startsWith("```") (
      data[i] = "```"
      code_block = 1 - code_block
    )
    if code_block == 0 (
      if line.startsWith("### ") (
        data[i] = line.trim(5,line.len)
        txt_sizes.append(txt_size + 1)
      ) else (
        if line.startsWith("## ") (
          data[i] = line.trim(4,line.len)
          txt_sizes.append(txt_size + 3)
        ) else (
          if line.startsWith("# ") (
            data[i] = line.trim(3,line.len)
            txt_sizes.append(txt_size + 5)
          ) else (
            txt_sizes.append(txt_size)
          )
        )
      )
    ) else (
      txt_sizes.append(txt_size)
    )
  )
  outputs.main = data
  segment_length = data.len * 23 + 100
  page_len += segment_length
  name = "Gpt Assistant"
)
c #222
frame left-10 h / 2 - 70 right+10 h / -2 page_len
y = 40
code_block = 0
if outputs.main != "" (
  loc 999 2 0 segment_length / -2 + scroll_y
  square frame_width - 20 segment_length 10 : c#prim
  loc 2 2 20 -20 + scroll_y
  text name 8 : c#txtc
  out = outputs.main
  loc 2 2 20 -75 + scroll_y
  x = x_position
  y_start = y_position
  each i line out (
    switch line (
      case "---"
        set_x 0
        square frame_width - 30 0 10 : c#seco
        c #ddd
        break
      case "```"
        code_block = 1 - code_block
        break
      default
        if code_block == 1 (
          set_x 0
          square frame_width - 30 20 5 : c#seco
          c #ddd
        )
        set_x x
        size = txt_sizes[i]
        text line size
        break
    )
    change_y size * -2
  )
  y -= segment_length
)
if page_len == 0 (
  loc 2 2 20 -20
  text "No Results" 10 : c#txtc
)

files = outputs.files.trim(1,10)
if files != "" (
  height = files.len * 40
  y -= 40
  y2 = y + scroll_y
  loc 999 2 0 y2 - (height / 2) + 10
  square frame_width - 20 height + 20 10 : c#prim
  loc 2 2 15 y2 + 10
  text "Files" 8 : c#fff
  count = 0
  loop files.len (
    count ++
    cur_y = -20 + y + scroll_y
    loc 999 2 0 cur_y
    file "open" files[count]
    square frame_width - 30 25 10 : c#prim hover_c#seco
    if clicked (
      file "start"
      window "stop"
    )
    rightclick "file" loaded_file
    loc 2 2 30 cur_y
    file "render" 1
    type = file[1]
    c #fff
    change_x 20
    if type == ".folder" (
      text file[2] 10
    ) else (
      text file[2] ++ type 10
    )
    y -= 40
  )
)

settings = outputs.settings.trim(1,3)
if settings != "" (
  height = settings.len * 40
  y -= 40
  y2 = y + scroll_y
  loc 999 2 0 y2 - (height / 2) + 10
  square frame_width - 20 height + 20 10 : c#prim
  loc 2 2 15 y2 + 10
  text "Settings" 8 : c#txtc
  count = 0
  loop settings.len (
    count ++
    cur_y = -20 + y + scroll_y
    loc 999 2 0 cur_y
    square frame_width - 30 25 10 : c#prim hover_c#seco
    if clicked (
      window "add" "settings" settings[count]
      window "stop"
    )
    loc 2 2 15 cur_y
    text settings[count] 10 : c#txtc
    y -= 40
  )
)

wins = outputs.windows.trim(1,4)
if wins != "" (
  height = wins.len * 40
  y -= 40
  y2 = y + scroll_y
  loc 999 2 0 y2 - ( height / 2 ) + 10
  square frame_width - 20 height + 20 10 : c#prim
  loc 2 2 15 y2 + 10
  text "Windows" 8 : c#txtc
  count = 0
  loop wins.len (
    count ++
    cur_y = -20 + y + scroll_y
    loc 999 2 0 cur_y
    square frame_width - 30 25 10 : c#prim hover_c#seco
    loc 2 2 15 cur_y
    text wins[count] 10 : c#txtc
    y -= 40
  )
)
if mouse_down.not "can = true"
