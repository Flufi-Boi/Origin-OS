file "use_type" "ots"

def "print" "data"
  terminal = terminal.destr ++ data.destr
  loops += data.destr.len
endef

def "clearall"
  terminal = []
  loops = 0
endef

if passed_data != "" (
  file "open" passed_data "onlyaccess"
  file "get" 4
  ots_script = data.split(newline)
  each i line ots_script (
    if line.startsWith("if ") or line.startsWith("jump ") (
      line.split(" ")
      if line.last()[1] == ":" (
        idx = ots_script.index(line.last())
        line[line.len] = idx
        ots_script[i] = line.join(" ").destr
      )
    )
  )
  log ots_script
) else (
  ots_script = ""
)
network "set_app_id" "terminal@system"
window "set_dragbox" [[2,2,0,0],[-2,2,-100,-30]]

user_start = username ++ "/: "
terminal = []
canenter = True
input_1 = null
permission "request" "terminal"


prim = user.theme.primary
seco = user.theme.secondary
tert = user.theme.tertiary
txtc = user.theme.text
window_colour = user.theme.background

loops = 0
taking_input = true
ots_i = 1
mainloop:
if new_network_data (
  msg = network_data_from + "> " + network_data
  terminal.append(msg)
  new_network_data = false
)

c prim
frame window.left window.top - 40 window.right window.bottom + 40 loops * 30

c #468058
loc 2 2 10 0
count = ((scroll_y / 30 - 1).round).clamp(0,loops)
loop (frame_height / 30 + 3).round.clamp(0,loops) (
  count ++
  y = count * -30 + 15 + scroll_y
  loc 2 2 10 y
  text terminal[count] 10
)
frame "clear"
loc 999 -2 0 20
square window.width 40 10 : c#prim
loc 2 -2 10 20
text user_start 10 : c#txtc
set_x user_start.len * 5
c prim
input window_width - (user_start.len + 2 * 10) 30 1 null null #468058

if ots_script != "" (
  cur = ots_script[ots_i]
  cur_spl = cur.oslTokenise()
  log cur
  switch cur_spl[1] (
    case "input"
      if taking_input (
        terminal.append(cur_spl[2])
        loops ++
        taking_var = cur_spl[cur_spl.len-1] == ">>"
        taking_input = false
      )
      if "enter".onpress (
        if taking_var (
          cmd = cur_spl.last() ++ " = " ++ input_1.str
          terminal cmd
        )
        terminal.append(username ++ "/: " ++ input_1.str)
        loops ++
        input_1 = ""
        ots_i ++
        taking_input = true
      )
      break
    case "if"
      terminal "echo" + cur_spl[2]
      if terminal_output[1].bool == true (
        ots_i = cur_spl.last() + 1
      ) else (
        ots_i ++
      )
      break
    case "jump"
      ots_i = cur_spl[2]
      break
    case ""
    case "#"
      ots_i ++
      break
    default
      if cur[1] != ":" (
        log cur
        terminal cur
        terminal = terminal ++ terminal_output
        terminal_output = []
        loops = terminal.len
      )
      ots_i ++
      if ots_i > ots_script.len (
        ots_script = ""
        terminal.append("Program Finished...")
        loops ++
      )
      break
  )
) else (
  if "enter".onpress (
    last = input_1
    try (
      terminal input_1.str
      input_1 = username ++ "/: " ++ input_1.str
      terminal = terminal.destr.append(input_1)
    
      terminal = terminal ++ terminal_output
    ) catch this.e (
      input_1 = username ++ "/: " ++ input_1.str
      terminal = terminal.destr.append(input_1)
      terminal.append(this.e.error)
    )
    loops = terminal.len
    terminal_output = []
    input_1 = null
  )
)
if "up arrow".pressed "input_1 = last"

loc 999 2 0 -20
square window_width 30 10 : c#prim
loc 2 2 10 -20
text "Terminal" 10 : c#txtc

import "win-buttons"

